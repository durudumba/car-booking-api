<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.raontec.carbookingapi.data.CarDAO">
    <select id="selectCarList" parameterType="map" resultType="map">
            SELECT
                A.CAR_NUM,
                A.CAR_MODL,
                (SELECT COMM_CD_NAME FROM TB_COMM_CD WHERE COMM_CD = A.FUEL_TYPE_CD) AS FUEL_TYPE,
                A.FUEL_TYPE_CD,
                A.RMRK,
                (SELECT PARK_LOC FROM TB_PARK_LOC WHERE CAR_NUM = A.CAR_NUM) AS PARK_LOC,
                TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI:SS') AS REG_DT
            FROM
                TB_CAR A LEFT JOIN TB_CAR_STTS B ON A.CAR_NUM = B.CAR_NUM
            WHERE 1=1
                AND A.DEL_YN = 'N'
                AND B.CAR_STTS_CD = 'CST0'
                AND A.CAR_NUM NOT IN (
                    SELECT
                        CAR_NUM
                    FROM
                        (SELECT
                             CAR_NUM,
                             CASE STRT_TMCD
                                 WHEN 'TDC2' THEN DATE_ADD(STRT_DT, INTERVAL 14 HOUR)
                                 ELSE DATE_ADD(STRT_DT, INTERVAL 0 HOUR) END STRT_DATETIME,
                             CASE END_TMCD
                                 WHEN 'TDC1' THEN DATE_ADD(END_DT, INTERVAL 13*60 + 59 MINUTE)
                                 ELSE DATE_ADD(END_DT, INTERVAL 23*60 + 59 MINUTE) END END_DATETIME
                         FROM
                             TB_CAR_BOOK_SCHD
                        ) A
                    WHERE 1=1
                        AND A.END_DATETIME <![CDATA[<]]> NOW()
                        OR STR_TO_DATE(#{eddt}, '%Y-%m-%d %H%i%s') <![CDATA[>]]> A.STRT_DATETIME
                        AND STR_TO_DATE(#{stdt}, '%Y-%m-%d %H%i%s') <![CDATA[<]]> A.END_DATETIME
                )
    </select>

    <select id="getCarsInfo" resultType="map">
        SELECT
            A.CAR_NUM,
            A.CAR_MODL,
            (SELECT COMM_CD_NAME FROM TB_COMM_CD WHERE COMM_CD = A.FUEL_TYPE_CD) AS FUEL_TYPE,
            A.FUEL_TYPE_CD,
            NVL(A.RMRK, '') AS RMRK,
            B.CAR_STTS_CD,
            (SELECT COMM_CD_NAME FROM TB_COMM_CD WHERE COMM_CD = B.CAR_STTS_CD) AS CAR_STTS,
            C.PARK_LOC
        FROM
            TB_CAR A LEFT JOIN TB_CAR_STTS B ON A.CAR_NUM = B.CAR_NUM
                LEFT JOIN TB_PARK_LOC C ON A.CAR_NUM = C.CAR_NUM
        WHERE 1=1
            AND A.DEL_YN = 'N'
    </select>

    <select id="getCarInfo" parameterType="string" resultType="map">
        SELECT
            A.CAR_NUM,
            A.CAR_MODL,
            (SELECT COMM_CD_NAME FROM TB_COMM_CD WHERE COMM_CD = A.FUEL_TYPE_CD) AS FUEL_TYPE,
            A.FUEL_TYPE_CD,
            B.CAR_STTS_CD,
            (SELECT COMM_CD_NAME FROM TB_COMM_CD WHERE COMM_CD = B.CAR_STTS_CD) AS CAR_STTS,
            IF(C.PARK_LOC='', '-', C.PARK_LOC) AS PARK_LOC
        FROM
            TB_CAR A LEFT JOIN TB_CAR_STTS B ON A.CAR_NUM = B.CAR_NUM
                     LEFT JOIN TB_PARK_LOC C ON A.CAR_NUM = C.CAR_NUM
        WHERE 1=1
            AND A.DEL_YN = 'N'
            AND A.CAR_NUM = #{carNumber}
    </select>

    <select id="getCarBookSchedule" parameterType="map" resultType="map">
        SELECT
            CAR_NUM
        FROM
            TB_CAR_BOOK_SCHD
        WHERE 1=1
            AND CAR_NUM = #{carNumber}
    </select>

    <select id="checkCarNumber" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            TB_CAR
        WHERE 1=1
            AND CAR_NUM = #{carNumber}
            AND DEL_YN = 'N'
    </select>

    <insert id="insertCarInfo" parameterType="map">
        INSERT INTO TB_CAR
            (CAR_NUM,
             CAR_MODL,
             FUEL_TYPE_CD,
             RMRK,
             DEL_YN,
             REG_DT)
        VALUES
            (#{carNumber},
             #{carModel},
             #{fuelTypeCd},
             #{rmrk},
             'N',
             NOW())
        ON DUPLICATE KEY UPDATE
            CAR_MODL = #{carModel},
            FUEL_TYPE_CD = #{fuelTypeCd},
            RMRK = #{rmrk},
            DEL_YN = 'N',
            REG_DT = NOW(),
            UPD_DT = null
    </insert>

    <insert id="insertCarStatus" parameterType="map">
        INSERT INTO TB_CAR_STTS
            (CAR_NUM,
             CAR_STTS_CD,
             DEL_YN,
             REG_DT)
        VALUES
            (#{carNumber},
             #{carStatusCd},
             'N',
             NOW())
        ON DUPLICATE KEY UPDATE
            CAR_STTS_CD = #{carStatusCd},
            DEL_YN = 'N',
            REG_DT = NOW(),
            UPD_DT = null
    </insert>

    <insert id="insertParkingLoc" parameterType="map">
        INSERT INTO TB_PARK_LOC
            (CAR_NUM,
             PARK_LOC,
             DEL_YN,
             RMRK,
             REG_DT)
        VALUES
            (#{carNumber},
             #{parkingLocation},
             'N',
             #{rmrk},
             NOW())
        ON DUPLICATE KEY UPDATE
            PARK_LOC = #{parkingLocation},
            DEL_YN = 'N',
            RMRK = #{rmrk},
            REG_DT = NOW(),
            UPD_DT = null
    </insert>

    <update id="updateCarInfo" parameterType="map">
        UPDATE
            TB_CAR A LEFT JOIN TB_CAR_STTS B ON A.CAR_NUM = B.CAR_NUM
                LEFT JOIN TB_PARK_LOC C ON A.CAR_NUM = C.CAR_NUM
        SET
            A.CAR_MODL = #{carModel},
            A.FUEL_TYPE_CD = #{fuelTypeCd},
            A.RMRK = #{rmrk},
            A.UPD_DT = NOW(),
            B.CAR_STTS_CD = #{carStatusCd},
            B.UPD_DT = NOW(),
            C.PARK_LOC = #{parkingLocation}
        WHERE 1=1
            AND A.CAR_NUM = #{carNumber}
            AND B.CAR_NUM = #{carNumber}
    </update>

    <update id="updateCarNumber" parameterType="map">
        UPDATE
            TB_CAR A LEFT JOIN TB_CAR_BOOK_SCHD B ON (A.CAR_NUM = B.CAR_NUM)
                LEFT JOIN TB_CAR_STTS C ON (A.CAR_NUM = C.CAR_NUM)
                LEFT JOIN TB_PARK_LOC D ON (A.CAR_NUM = D.CAR_NUM)
        SET
            A.CAR_NUM = #{newCarNumber},
            A.UPD_DT = NOW(),
            B.CAR_NUM = #{newCarNumber},
            C.CAR_NUM = #{newCarNumber},
            C.UPD_DT = NOW(),
            D.CAR_NUM = #{newCarNumber}
        WHERE 1=1
          AND A.CAR_NUM = #{carNumber}
    </update>

    <update id="deleteCarInfo" parameterType="map">
        UPDATE
            TB_CAR A LEFT JOIN TB_CAR_STTS B ON A.CAR_NUM = B.CAR_NUM
                LEFT JOIN TB_PARK_LOC C ON A.CAR_NUM = C.CAR_NUM
        SET
            A.DEL_YN = 'Y',
            A.UPD_DT = NOW(),
            B.DEL_YN = 'Y',
            B.UPD_DT = NOW(),
            C.DEL_YN = 'Y',
            C.UPD_DT = NOW()
        WHERE 1=1
            AND A.CAR_NUM = #{carNumber}
            AND B.CAR_NUM = #{carNumber}
            AND C.CAR_NUM = #{carNumber}
    </update>




    <delete id="deleteExpiredSchedule">
        DELETE FROM
            TB_CAR_BOOK_SCHD
        WHERE 1=1
            AND STRT_DT <![CDATA[<]]> NOW()
            AND END_DT <![CDATA[<]]> NOW()
    </delete>
</mapper>