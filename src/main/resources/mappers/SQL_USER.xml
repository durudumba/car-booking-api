<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.raontec.carbookingapi.data.UserDAO">
    <insert id="insertUser" parameterType="map">
        INSERT INTO TB_USER
            (
                USER_ID,
                USER_PW,
                USER_NAME,
                USER_RANK,
                REG_DT
            )
        VALUES
            (
                #{userId},
                #{userPw},
                #{userName},
                1,
                NOW()
            )
    </insert>

    <update id="updateUserInfo" parameterType="map">
        UPDATE
            TB_USER
        SET
            USER_RANK = #{userRank},
            DENY_USE_YN = #{denyUseYN},
            UPD_DT = NOW()
        WHERE 1=1
            AND USER_ID = #{userId}
    </update>

    <select id="isDeniedUser" parameterType="string" resultType="string">
        SELECT
            DENY_USE_YN
        FROM
            TB_USER
        WHERE 1=1
            AND USER_ID = #{userId}
    </select>

    <select id="getPageAccessAuth" parameterType="map" resultType="map">
        SELECT
            IF(A.USER_RANK > B.PRMT_MIN_RANK, 'N', 'Y') AS PRMT_YN,
            A.DENY_USE_YN
        FROM
            (SELECT USER_RANK, DENY_USE_YN FROM TB_USER WHERE USER_ID = #{userId}) A,
            (SELECT PRMT_MIN_RANK FROM TB_USER_MENU WHERE MENU_ID = #{menuId}) B
    </select>

    <select id="getUserInfo" parameterType="string" resultType="com.raontec.carbookingapi.objects.UserVO">
        SELECT
            USER_ID as userId,
            USER_PW as userPw
        FROM
            TB_USER
        WHERE 1=1
            AND USER_ID = #{userId}
    </select>

    <select id="selectUserInfo" parameterType="string" resultType="map">
        SELECT
            USER_ID,
            USER_PW,
            USER_NAME,
            USER_RANK,
            REG_DT,
            UPD_DT
        FROM
            TB_USER
        WHERE 1=1
            AND USER_ID = #{userID}
    </select>

    <select id="getAccessableMenuList" parameterType="string" resultType="map">
        SELECT
            UM.MENU_ID,
            UM.MENU_NAME,
            CASE U.USER_RANK <![CDATA[<=]]> UM.PRMT_MIN_RANK
                WHEN 1 THEN 'Y'
                ELSE 'N' END PRMT_ACCS
        FROM
            TB_USER U, TB_USER_MENU UM
        WHERE 1=1
            AND U.USER_ID = #{userId}
            AND UM.DEL_YN = 'N'
    </select>

    <select id="selectUserList" resultType="map">
        SELECT
            USER_ID,
            USER_NAME,
            USER_RANK,
            IF(USER_RANK=0, '관리자', '사용자') AS USER_RANK_NAME,
            DATE_FORMAT(REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT,
            NVL(UPD_DT, '-') AS UPD_DT,
            DENY_USE_YN,
            IF(DENY_USE_YN='Y', '제한', '없음') AS DENY_USE
        FROM
            TB_USER
    </select>

    <delete id="deleteUserInfo" parameterType="map">
        DELETE FROM TB_USER
        WHERE USER_ID = #{userId}
    </delete>

    <delete id="deleteUserSchedule" parameterType="map">
        DELETE FROM TB_CAR_BOOK_SCHD
        WHERE SBMT_NAME = (SELECT USER_NAME FROM TB_USER WHERE USER_ID = #{userId})
    </delete>
</mapper>